// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StockQuoteChat.Infrastructure;

#nullable disable

namespace StockQuoteChat.Infrastructure.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20230109021948_AddSeed")]
    partial class AddSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StockQuoteChat.Application.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bb6e697-973f-43e9-8e16-34f4ba4f7973"),
                            Name = "Room One"
                        },
                        new
                        {
                            Id = new Guid("5afbe4a4-cc43-4c60-9b3b-f9b227128b6d"),
                            Name = "Room Two"
                        });
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08a0bb60-cbc9-46c4-a3e5-207564fdcf0f"),
                            Email = "userone@email.com",
                            FirstName = "ChatUserOne",
                            LastName = "",
                            Password = "123"
                        },
                        new
                        {
                            Id = new Guid("a31137cb-7ceb-464a-a0f9-e94476660979"),
                            Email = "usertwo@email.com",
                            FirstName = "ChatUserTwo",
                            LastName = "",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.Message", b =>
                {
                    b.HasOne("StockQuoteChat.Application.Entities.Room", "Room")
                        .WithMany("Messages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockQuoteChat.Application.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.Room", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.User", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StockQuoteChat.Infrastructure;

#nullable disable

namespace StockQuoteChat.Infrastructure.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20230110030137_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StockQuoteChat.Application.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "RoomId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4533c28e-1d83-45e5-bf1e-9592312e7b07"),
                            Name = "Room One"
                        },
                        new
                        {
                            Id = new Guid("df626fef-3144-419d-97a0-36060d627b27"),
                            Name = "Room Two"
                        });
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5df068f3-0e41-4748-ab42-e349cad71089"),
                            Email = "userone@email.com",
                            FirstName = "ChatUserOne",
                            LastName = "",
                            Password = "123"
                        },
                        new
                        {
                            Id = new Guid("3c2f3df4-9439-4695-b166-5d4bda902e69"),
                            Email = "usertwo@email.com",
                            FirstName = "ChatUserTwo",
                            LastName = "",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.UserRoom", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("UserRooms");
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.Message", b =>
                {
                    b.HasOne("StockQuoteChat.Application.Entities.UserRoom", "UserRoom")
                        .WithMany("Messages")
                        .HasForeignKey("UserId", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRoom");
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.UserRoom", b =>
                {
                    b.HasOne("StockQuoteChat.Application.Entities.Room", "Room")
                        .WithMany("UserRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockQuoteChat.Application.Entities.User", "User")
                        .WithMany("UserRooms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.Room", b =>
                {
                    b.Navigation("UserRooms");
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.User", b =>
                {
                    b.Navigation("UserRooms");
                });

            modelBuilder.Entity("StockQuoteChat.Application.Entities.UserRoom", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
